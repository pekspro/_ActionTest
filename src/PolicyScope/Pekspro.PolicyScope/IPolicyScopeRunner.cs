// This file has been autogenerated via
// Pekspro.PolicyScope.CodeGenerator.MainLibrary.PolicyScopeRunnerGenerator

using System;
using System.Threading.Tasks;

namespace Pekspro.PolicyScope
{
    public interface IAsyncNoServiceNoResultPolicyScopeRunner
    {
        Task RunAsync(Func<Task> func);
    }

    public interface IAsyncServiceNoResultPolicyScopeRunner<T>
    {
        Task RunAsync(Func<T, Task> func);
    }

    public interface IAsyncServiceNoResultPolicyScopeRunner<T1, T2>
    {
        Task RunAsync(Func<T1, T2, Task> func);
    }

    public interface IAsyncServiceNoResultPolicyScopeRunner<T1, T2, T3>
    {
        Task RunAsync(Func<T1, T2, T3, Task> func);
    }

    public interface IAsyncServiceNoResultPolicyScopeRunner<T1, T2, T3, T4>
    {
        Task RunAsync(Func<T1, T2, T3, T4, Task> func);
    }

    public interface IAsyncNoServiceResultPolicyScopeRunner<TResult>
    {
        Task<TResult> RunAsync(Func<Task<TResult>> func);
    }

    public interface IAsyncServiceResultPolicyScopeRunner<T, TResult>
    {
        Task<TResult> RunAsync(Func<T, Task<TResult>> func);
    }

    public interface IAsyncServiceResultPolicyScopeRunner<T1, T2, TResult>
    {
        Task<TResult> RunAsync(Func<T1, T2, Task<TResult>> func);
    }

    public interface IAsyncServiceResultPolicyScopeRunner<T1, T2, T3, TResult>
    {
        Task<TResult> RunAsync(Func<T1, T2, T3, Task<TResult>> func);
    }

    public interface IAsyncServiceResultPolicyScopeRunner<T1, T2, T3, T4, TResult>
    {
        Task<TResult> RunAsync(Func<T1, T2, T3, T4, Task<TResult>> func);
    }

    public interface ISyncNoServiceNoResultPolicyScopeRunner
    {
        void Run(Action func);
    }

    public interface ISyncServiceNoResultPolicyScopeRunner<T>
    {
        void Run(Action<T> func);
    }

    public interface ISyncServiceNoResultPolicyScopeRunner<T1, T2>
    {
        void Run(Action<T1, T2> func);
    }

    public interface ISyncServiceNoResultPolicyScopeRunner<T1, T2, T3>
    {
        void Run(Action<T1, T2, T3> func);
    }

    public interface ISyncServiceNoResultPolicyScopeRunner<T1, T2, T3, T4>
    {
        void Run(Action<T1, T2, T3, T4> func);
    }

    public interface ISyncNoServiceResultPolicyScopeRunner<TResult>
    {
        TResult Run(Func<TResult> func);
    }

    public interface ISyncServiceResultPolicyScopeRunner<T, TResult>
    {
        TResult Run(Func<T, TResult> func);
    }

    public interface ISyncServiceResultPolicyScopeRunner<T1, T2, TResult>
    {
        TResult Run(Func<T1, T2, TResult> func);
    }

    public interface ISyncServiceResultPolicyScopeRunner<T1, T2, T3, TResult>
    {
        TResult Run(Func<T1, T2, T3, TResult> func);
    }

    public interface ISyncServiceResultPolicyScopeRunner<T1, T2, T3, T4, TResult>
    {
        TResult Run(Func<T1, T2, T3, T4, TResult> func);
    }
}
