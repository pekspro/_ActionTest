using System.Collections.Generic;
using System.Text;

namespace Pekspro.PolicyScope.CodeGenerator.Common
{
    public abstract class CodeGeneratorBase
    {
        public CodeGeneratorBase()
        {

        }

        public void WriteAllFiles(int maxServiceCount)
        {
            WriteClassFileContent(maxServiceCount);
            WriteInterfaceFileContent(maxServiceCount);
        }


        public virtual void WriteClassFileContent(int maxServiceCount)
        {
        }

        public virtual void WriteInterfaceFileContent(int maxServiceCount)
        {
        }

        public void WriteFileContent(string filename, string fileContent)
        {
            string path = System.IO.Path.Combine("../../../../", filename);

            StringBuilder sb = new StringBuilder();
            sb.AppendLine("// This file has been autogenerated via");
            sb.AppendLine("// " + GetType().ToString());
            sb.AppendLine();
            sb.Append(fileContent);

            fileContent = sb.ToString();

            System.IO.File.WriteAllText(path, fileContent, Encoding.UTF8);
        }

        public const bool GenerateSync = true;

        public List<string> ServicesTypes { get; set; } = new List<string>();

        public List<string> ServicesNames { get; set; } = new List<string>();

        public abstract string GetClassName(CodeNames codeNames);

        public string GetInterfaceName(CodeNames codeNames) => "I" + GetClassName(codeNames);

        public string GetClassNameAndTemplateParamaters(CodeNames codeNames) => GetClassName(codeNames) + codeNames.TemplateParametersAndResult;

        public string GetInterfaceNameAndTemplateParamaters(CodeNames codeNames) => "I" + GetClassNameAndTemplateParamaters(codeNames);
    }
}
